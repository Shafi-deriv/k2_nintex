{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST APIs for AI-Agents-Automation",
    "description": "K2-compatible Swagger file for Duplicate Account, Required Screening, and Proof Of Ownership validation endpoints."
  },
  "host": "deriv-app.xano.io",
  "basePath": "/api:dYjlDR0_",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1-bridge/duplicate-account": {
      "get": {
        "summary": "Check Duplicate Account",
        "description": "Checks if a given user ID is a duplicate account and provides related metadata.",
        "operationId": "checkDuplicateAccount",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Duplicate account check result",
            "schema": {
              "$ref": "#/definitions/DuplicateAccountResponse"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/duplicate-account/data": {
      "get": {
        "summary": "Get Duplicate Data",
        "description": "Returns the data for the duplicate account check.",
        "operationId": "getDuplicateAccountData",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Data for the duplicate account check",
            "schema": {
              "$ref": "#/definitions/DuplicateAccountData"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/duplicate-user-test": {
      "get": {
        "summary": "Analyze Duplicate Users",
        "description": "Analyzes potential duplicate users based on the provided user ID, categorizing them for deactivation or retention with confidence levels and explanations.",
        "operationId": "analyzeDuplicateUsers",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The user ID to initiate the duplicate user analysis for."
          }
        ],
        "responses": {
          "200": {
            "description": "Duplicate user analysis result, categorizing users for deactivation or retention.",
            "schema": {
              "$ref": "#/definitions/DuplicateUserAnalysisResponse"
            },
            "examples": {
              "application/json": {
                "users_to_disable": [
                  {
                    "user_id": "800002",
                    "confidence_lvl": 100,
                    "explanation": "Primary user. Exact email match to search criteria.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "100001",
                    "confidence_lvl": 99,
                    "explanation": "Identical address, date of birth, phone number, and POI document to user 800002. Similar name (Hannah Wright vs Hannah Right).",
                    "regulated_account_included": true
                  }
                ],
                "analyzed_users_to_keep": [
                  {
                    "user_id": "100280",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hwright@hotmail.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "102626",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.wright.pro@gmail.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "104492",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.w567@yandex.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "119106",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.w@yahoo.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "132670",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannahw@outlook.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "138604",
                    "confidence_lvl": 40,
                    "explanation": "ggg.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "143324",
                    "confidence_lvl": 40,
                    "explanation": "tytyt.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "900002",
                    "confidence_lvl": 99,
                    "explanation": "gggg",
                    "regulated_account_included": true
                  }
                ],
                "explanation": "The search criteria provided matches(name/email similarity) but lack the convergence of multiple unique identifiers seen in the top matches."
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/duplicate-user": {
      "get": {
        "summary": "Check Duplicate User",
        "description": "Checks for duplicate users based on the provided user_id.<br /><br /><b>Authentication:</b> not required",
        "operationId": "checkDuplicateUser",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The User ID to check for duplicates.",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysis_id",
            "in": "query",
            "description": "An identifier for the specific analysis run or scenario.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Duplicate user check result",
            "schema": {
              "$ref": "#/definitions/CheckDuplicateUserResponse"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/required-screening": {
      "get": {
        "summary": "Get Required Screening",
        "description": "Returns required screening for given broker, event and regulation status.",
        "operationId": "getRequiredScreening",
        "parameters": [
          {
            "name": "broker_code",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "event_name",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "regulated",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "jwt_token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Required screening response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScreeningItem"
              }
            },
            "examples": {
              "application/json": {
                "users_to_disable": [
                  {
                    "user_id": "800002",
                    "confidence_lvl": 100,
                    "explanation": "Primary user. Exact email match to search criteria.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "100001",
                    "confidence_lvl": 99,
                    "explanation": "Identical address, date of birth, phone number, and POI document to user 800002. Similar name (Hannah Wright vs Hannah Right).",
                    "regulated_account_included": true
                  }
                ],
                "analyzed_users_to_keep": [
                  {
                    "user_id": "100280",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hwright@hotmail.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "102626",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.wright.pro@gmail.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "104492",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.w567@yandex.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "119106",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannah.w@yahoo.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "132670",
                    "confidence_lvl": 40,
                    "explanation": "Similar email (hannahw@outlook.com) and similar name (Hannah Wright) to user 800002.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "138604",
                    "confidence_lvl": 40,
                    "explanation": "ggg.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "143324",
                    "confidence_lvl": 40,
                    "explanation": "tytyt.",
                    "regulated_account_included": true
                  },
                  {
                    "user_id": "900002",
                    "confidence_lvl": 99,
                    "explanation": "gggg",
                    "regulated_account_included": true
                  }
                ],
                "explanation": "The search criteria provided matches(name/email similarity) but lack the convergence of multiple unique identifiers seen in the top matches."
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/required-screening/data": {
      "get": {
        "summary": "Get Required Screening Data",
        "description": "Returns only required screening data.",
        "operationId": "getRequiredScreeningData",
        "parameters": [
          {
            "name": "broker_code",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "event_name",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "regulated",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "jwt_token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Required screening data",
            "schema": {
              "$ref": "#/definitions/RequiredScreeningData"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/validate-poo": {
      "get": {
        "summary": "Validate Proof Of Ownership",
        "description": "Validates proof of ownership for user.",
        "operationId": "validateProofOfOwnership",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "jwt_token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Validation response",
            "schema": {
              "$ref": "#/definitions/ValidatePOOResponse"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/v1-bridge/validate-poo/data": {
      "get": {
        "summary": "Get POO Validation Data",
        "description": "Returns only validation data.",
        "operationId": "getValidatePOOData",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "jwt_token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Validation POO data",
            "schema": {
              "$ref": "#/definitions/ValidatePOOData"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized. Authentication credentials are missing or invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred on the server.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Unexpected error (detail included).",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A detailed error message."
        }
      }
    },
    "DuplicateAccountResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "example": "/api:QQZDcMfq/v1-bridge/duplicate-account?user_id=CR0000001"
            },
            "verb": {
              "type": "string",
              "example": "GET"
            }
          }
        },
        "data": {
          "$ref": "#/definitions/DuplicateAccountData"
        }
      }
    },
    "DuplicateAccountData": {
      "type": "object",
      "properties": {
        "is_duplicate_acc": {
          "type": "boolean",
          "example": false
        },
        "duplicate_acc_confidence": {
          "type": "integer",
          "example": 80
        },
        "acc_to_disable_confidence": {
          "type": "integer",
          "example": 85
        },
        "acc_to_disable": {
          "type": "string",
          "example": "CR12345"
        },
        "regulated_acc": {
          "type": "boolean",
          "example": true
        },
        "duplicate_acc_type": {
          "type": "string",
          "example": "CFD"
        },
        "duplicate_acc_funds": {
          "type": "number",
          "example": 4
        },
        "open_positions": {
          "type": "boolean",
          "example": false
        },
        "suspected_fraud_lvl": {
          "type": "integer",
          "example": 55
        }
      }
    },
    "ScreeningItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "PEP"
        }
      }
    },
    "RequiredScreeningResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "example": "/api:QQZDcMfq/v1-bridge/required-screening?broker_code=CR&event_name=High%20Risk&regulated=true&jwt_token=rrr"
            },
            "verb": {
              "type": "string",
              "example": "GET"
            }
          }
        },
        "data": {
          "$ref": "#/definitions/RequiredScreeningData"
        }
      }
    },
    "RequiredScreeningData": {
      "type": "object",
      "properties": {
        "required_screening": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScreeningItem"
          }
        }
      }
    },
    "ValidatePOOResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "example": "/api:QQZDcMfq/v1-bridge/validate-poo?user_id=Cr001&jwt_token=ghgh"
            },
            "verb": {
              "type": "string",
              "example": "GET"
            }
          }
        },
        "data": {
          "$ref": "#/definitions/ValidatePOOData"
        }
      }
    },
    "ValidatePOOData": {
      "type": "object",
      "properties": {
        "owner_acc": {
          "type": "string",
          "example": "CR01"
        },
        "sharer_acc": {
          "type": "string",
          "example": "CR02"
        },
        "poo_from_acc": {
          "type": "string",
          "example": "owner"
        },
        "num_of_cards_in_acc": {
          "type": "integer",
          "example": 1
        },
        "validation_confidence_lvl": {
          "type": "integer",
          "example": 50
        }
      }
    },
    "UserAnalysisDetail": {
      "type": "object",
      "description": "Details about a single user's analysis, including confidence and regulation status.",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "example": "800002"
        },
        "confidence_lvl": {
          "type": "integer",
          "format": "int32",
          "description": "Confidence level (0-100) of the analysis for this user.",
          "example": 100
        },
        "explanation": {
          "type": "string",
          "description": "A textual explanation for the user's categorization or analysis outcome.",
          "example": "Primary user. Exact email match to search criteria."
        },
        "regulated_account_included": {
          "type": "boolean",
          "description": "Indicates if the user's account is a regulated account.",
          "example": true
        }
      },
      "required": [
        "user_id",
        "confidence_lvl",
        "explanation",
        "regulated_account_included"
      ]
    },
    "DuplicateUserAnalysisResponse": {
      "type": "object",
      "description": "Comprehensive response for the duplicate user analysis.",
      "properties": {
        "users_to_disable": {
          "type": "array",
          "description": "A list of user accounts identified as candidates for deactivation due to high confidence of being duplicates or primary.",
          "items": {
            "$ref": "#/definitions/UserAnalysisDetail"
          }
        },
        "analyzed_users_to_keep": {
          "type": "array",
          "description": "A list of user accounts that were analyzed but are recommended for retention, typically due to lower confidence as duplicates or distinct characteristics.",
          "items": {
            "$ref": "#/definitions/UserAnalysisDetail"
          }
        },
        "explanation": {
          "type": "string",
          "description": "An overall summary or explanation for the entire duplicate user analysis process.",
          "example": "The search criteria provided matches(name/email similarity) but lack the convergence of multiple unique identifiers seen in the top matches."
        }
      },
      "required": [
        "users_to_disable",
        "analyzed_users_to_keep",
        "explanation"
      ]
    },
    "CheckDuplicateUserResponse": {
      "type": "object",
      "properties": {
        "recommended_duplicate_user_id": {
          "type": "string",
          "description": "The recommended duplicate user ID if a potential duplicate is found."
        },
        "associated_duplicate_user_id_list": {
          "type": "string",
          "description": "A comma-separated list of associated duplicate user IDs."
        },
        "confidence_level": {
          "type": "integer",
          "format": "int32",
          "description": "The confidence level of the duplication check, as a percentage."
        },
        "regulated_account_included": {
          "type": "boolean",
          "description": "Indicates if a regulated account is included in the duplicate check."
        },
        "is_duplicate": {
          "type": "boolean",
          "description": "Indicates duplicate account is found."
        },
        "brand": {
          "type": "string",
          "description": "The brand associated with the user."
        },
        "explanation": {
          "type": "string",
          "description": "An explanation of the duplicate check result."
        },
        "result_set_id": {
          "type": "string",
          "description": "The ID of the result set for this check."
        },
        "message": {
          "type": "string",
          "description": "A general message providing additional context or details about the duplicate check result.",
          "example": "Duplicate user check completed successfully."
        }
      }
    }
  }
}
