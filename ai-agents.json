{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST APIs for AI-Agents-Automation",
    "description": "K2-compatible Swagger file for Duplicate Account, Required Screening, and Proof Of Ownership validation endpoints."
  },
  "host": "deriv-app.xano.io",
  "basePath": "/api:QQZDcMfq",
  "schemes": [
    "https"
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/v1-bridge/duplicate-account": {
      "get": {
        "summary": "Check Duplicate Account",
        "description": "Checks if a given user ID is a duplicate account and provides related metadata.",
        "operationId": "checkDuplicateAccount",
        "parameters": [
          { "name": "user_id", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "Duplicate account check result", "schema": { "$ref": "#/definitions/DuplicateAccountResponse" } },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    },
    "/v1-bridge/duplicate-account/data": {
      "get": {
        "summary": "Get Duplicate Data",
        "description": "Returns the data for the duplicate account check.",
        "operationId": "getDuplicateAccountData",
        "parameters": [
          { "name": "user_id", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "Data for the duplicate account check", "schema": { "$ref": "#/definitions/DuplicateAccountData" } },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    },
    "/v1-bridge/duplicate-account/analysis": {
      "get": {
        "summary": "Get Detailed Duplicate Account Analysis",
        "description": "Provides a detailed analysis of duplicate accounts, including accounts recommended for disabling, accounts to keep, and a comprehensive explanation.",
        "operationId": "getDetailedDuplicateAccountAnalysis",
        "parameters": [
          { "name": "user_id", "in": "query", "type": "string", "required": true, "description": "The user ID for which to perform the duplicate account analysis." }
        ],
        "responses": {
          "200": {
            "description": "Detailed duplicate account analysis result.",
            "schema": { "$ref": "#/definitions/DetailedDuplicateAccountAnalysisResponse" }
          },
          "default": {
            "description": "Unexpected error",
            "schema": { "type": "object", "properties": { "message": { "type": "string" } } }
          }
        }
      }
    },
    "/v1-bridge/required-screening": {
      "get": {
        "summary": "Get Required Screening",
        "description": "Returns required screening for given broker, event and regulation status.",
        "operationId": "getRequiredScreening",
        "parameters": [
          { "name": "broker_code", "in": "query", "type": "string", "required": true },
          { "name": "event_name", "in": "query", "type": "string", "required": true },
          { "name": "regulated", "in": "query", "type": "boolean", "required": true },
          { "name": "jwt_token", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": {
            "description": "Required screening response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScreeningItem"
              },
              "example": [
                { "name": "PEP" },
                { "name": "Adverse Media" }
              ]
            }
          },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    },
    "/v1-bridge/required-screening/data": {
      "get": {
        "summary": "Get Required Screening Data",
        "description": "Returns only required screening data.",
        "operationId": "getRequiredScreeningData",
        "parameters": [
          { "name": "broker_code", "in": "query", "type": "string", "required": true },
          { "name": "event_name", "in": "query", "type": "string", "required": true },
          { "name": "regulated", "in": "query", "type": "boolean", "required": true },
          { "name": "jwt_token", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "Required screening data", "schema": { "$ref": "#/definitions/RequiredScreeningData" } },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    },
    "/v1-bridge/validate-poo": {
      "get": {
        "summary": "Validate Proof Of Ownership",
        "description": "Validates proof of ownership for user.",
        "operationId": "validateProofOfOwnership",
        "parameters": [
          { "name": "user_id", "in": "query", "type": "string", "required": true },
          { "name": "jwt_token", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "Validation response", "schema": { "$ref": "#/definitions/ValidatePOOResponse" } },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    },
    "/v1-bridge/validate-poo/data": {
      "get": {
        "summary": "Get POO Validation Data",
        "description": "Returns only validation data.",
        "operationId": "getValidatePOOData",
        "parameters": [
          { "name": "user_id", "in": "query", "type": "string", "required": true },
          { "name": "jwt_token", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "Validation POO data", "schema": { "$ref": "#/definitions/ValidatePOOData" } },
          "default": { "description": "Unexpected error", "schema": { "type": "object", "properties": { "message": { "type": "string" } } } }
        }
      }
    }
  },
  "definitions": {
    "DuplicateAccountResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": { "type": "string", "example": "/api:QQZDcMfq/v1-bridge/duplicate-account?user_id=CR0000001" },
            "verb": { "type": "string", "example": "GET" }
          }
        },
        "data": { "$ref": "#/definitions/DuplicateAccountData" }
      }
    },
    "DuplicateAccountData": {
      "type": "object",
      "properties": {
        "is_duplicate_acc": { "type": "boolean", "example": false },
        "duplicate_acc_confidence": { "type": "integer", "example": 80 },
        "acc_to_disable_confidence": { "type": "integer", "example": 85 },
        "acc_to_disable": { "type": "string", "example": "CR12345" },
        "regulated_acc": { "type": "boolean", "example": true },
        "duplicate_acc_type": { "type": "string", "example": "CFD" },
        "duplicate_acc_funds": { "type": "number", "example": 4 },
        "open_positions": { "type": "boolean", "example": false },
        "suspected_fraud_lvl": { "type": "integer", "example": 55 }
      }
    },
    "ScreeningItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "PEP"
        }
      }
    },
    "RequiredScreeningResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": { "type": "string", "example": "/api:QQZDcMfq/v1-bridge/required-screening?broker_code=CR&event_name=High%20Risk&regulated=true&jwt_token=rrr" },
            "verb": { "type": "string", "example": "GET" }
          }
        },
        "data": { "$ref": "#/definitions/RequiredScreeningData" }
      }
    },
    "RequiredScreeningData": {
      "type": "object",
      "properties": {
        "required_screening": {
          "type": "array",
          "items": { "$ref": "#/definitions/ScreeningItem" }
        }
      }
    },
    "ValidatePOOResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "endpoint": { "type": "string", "example": "/api:QQZDcMfq/v1-bridge/validate-poo?user_id=Cr001&jwt_token=ghgh" },
            "verb": { "type": "string", "example": "GET" }
          }
        },
        "data": { "$ref": "#/definitions/ValidatePOOData" }
      }
    },
    "ValidatePOOData": {
      "type": "object",
      "properties": {
        "owner_acc": { "type": "string", "example": "CR01" },
        "sharer_acc": { "type": "string", "example": "CR02" },
        "poo_from_acc": { "type": "string", "example": "owner" },
        "num_of_cards_in_acc": { "type": "integer", "example": 1 },
        "validation_confidence_lvl": { "type": "integer", "example": 50 }
      }
    },
    "UserAccountDetails": {
      "type": "object",
      "description": "Details of a user account in the analysis, including user ID, confidence level, and regulated account status.",
      "properties": {
        "user_id": { "type": "string", "description": "The unique identifier of the user account.", "example": "CR0000001" },
        "confidence_lvl": { "type": "integer", "format": "int32", "minimum": 0, "maximum": 100, "description": "A confidence score (0-100) indicating the likelihood of the account's classification (e.g., to disable or to keep).", "example": 95 },
        "regulated_account_included": { "type": "boolean", "description": "Indicates whether this specific account is a regulated account.", "example": true }
      },
      "required": ["user_id", "confidence_lvl", "regulated_account_included"]
    },
    "DetailedDuplicateAccountAnalysisResponse": {
      "type": "object",
      "description": "Comprehensive analysis of duplicate accounts, providing recommendations and an explanation.",
      "properties": {
        "users_to_disable": {
          "type": "array",
          "description": "A list of user accounts identified as candidates for disabling due to being duplicates or associated with fraud.",
          "items": {
            "$ref": "#/definitions/UserAccountDetails"
          },
          "example": [
            {
              "user_id": "CR0000002",
              "confidence_lvl": 98,
              "regulated_account_included": true
            },
            {
              "user_id": "CR0000003",
              "confidence_lvl": 90,
              "regulated_account_included": false
            }
          ]
        },
        "analyzed_users_to_keep": {
          "type": "array",
          "description": "A list of user accounts that were part of the analysis but are recommended to be kept.",
          "items": {
            "$ref": "#/definitions/UserAccountDetails"
          },
          "example": [
            {
              "user_id": "CR0000001",
              "confidence_lvl": 85,
              "regulated_account_included": true
            }
          ]
        },
        "explanation": {
          "type": "string",
          "description": "A detailed textual explanation providing insights into the analysis process and the rationale behind the recommendations.",
          "example": "The analysis indicates that CR0000002 and CR0000003 are duplicates of CR0000001 based on shared IP addresses and similar registration details. CR0000001 is the primary regulated account and should be kept, while the others are candidates for disablement due to strong linkage."
        }
      },
      "required": ["users_to_disable", "analyzed_users_to_keep", "explanation"]
    }
  }
}
