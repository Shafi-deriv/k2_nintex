{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST APIs for Automation - V2 Endpoints",
    "description": "Swagger file containing only the V2 endpoints for Process Automation."
  },
  "host": "deriv-app.xano.io",
  "basePath": "api:ekyZ8a89",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/AddLockV2": {
      "post": {
        "summary": "Add Lock (V2)",
        "description": "The purpose of this API is to add a Lock of a specific type to a specific User ID. Covers MT5, Cashier and Unwelcome Login Locks.<br /><br /><b>Authentication:</b> not required",
        "operationId": "addLockV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add lock V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddLockV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {
               "$ref": "#/definitions/AddLockResponse"
            }
          },
           "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/AddRemarksV2": {
      "post": {
        "summary": "Add Remarks (V2)",
        "description": "The purpose of this API is to add a new remark text for a specific user.<br /><br /><b>Authentication:</b> not required",
        "operationId": "addRemarksV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add remarks V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRemarksV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/CheckClientAgainst3rdPartyWatchlistV2": {
      "get": {
        "summary": "Check Client Against 3rd Party Watchlist (V2)",
        "description": "The purpose of this API is to check if the specific User ID exists against an external 3rd party provided watchlist.<br /><br /><b>Authentication:</b> not required",
        "operationId": "checkClientAgainst3rdPartyWatchlistV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes that the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to perform the Sanctions List check against.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/CheckClientAgainstSanctionsListV2": {
      "get": {
        "summary": "Check Client Against Sanctions List (V2)",
        "description": "The purpose of this API is to check if the specific User ID exists in the internal Sanctions List.<br /><br /><b>Authentication:</b> not required",
        "operationId": "checkClientAgainstSanctionsListV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to perform the Sanctions List check against.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/DisableAccountV2": {
      "post": {
        "summary": "Disable Account (V2)",
        "description": "The purpose of this API is to Disable all Accounts for a specific User ID, to prevent access.<br /><br /><b>Authentication:</b> not required",
        "operationId": "disableAccountV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Disable account V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAccountV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
             "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/EnableProofOfOwnershipV2": {
      "post": {
        "summary": "Enable Proof Of Ownership (V2)",
        "description": "The purpose of this API is to enable proof of ownership (POO) for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "enableProofOfOwnershipV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Enable Proof Of Ownership V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableProofOfOwnershipV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
             "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/GetAccountBalanceV2": {
      "get": {
        "summary": "Get Account Balance (V2)",
        "description": "The purpose of this API is to retrieve the balance across all accounts held for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getAccountBalanceV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify all accounts for which a consolidated balance is required.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/GetMT5AccountBalanceV2": {
      "get": {
        "summary": "Get MT5 Account Balance (V2)",
        "description": "The purpose of this API is to retrieve the balance across all MT5 accounts held for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getMT5AccountBalanceV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify all MT5 accounts for which a consolidated balance is required.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/GetPOIDataV2": {
      "get": {
        "summary": "Get POI Data (V2)",
        "description": "The purpose of this API is to retrieve the POI data for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getPOIDataV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify who to get the POI data for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/GetSwagger2docsV2": {
      "get": {
        "summary": "Get Swagger 2 Docs (V2)",
        "description": "<br /><br /><b>Authentication:</b> not required",
        "operationId": "getSwagger2docsV2",
        "tags": [
          "V2"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success!",
             "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/NotifyClientV2": {
      "post": {
        "summary": "Notify Client (V2)",
        "description": "The purpose of this API is to send Notifications to a specific client top level User ID, via a specific channel. ie Email, Intercom, etc<br /><br /><b>Authentication:</b> not required",
        "operationId": "notifyClientV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Notification V2 payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyClientV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification created",
             "schema": {
              "$ref": "#/definitions/NotifyClientResponse"
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/RemoveLockV2": {
      "post": {
        "summary": "Remove Lock (V2)",
        "description": "The purpose of this API is to remove a Lock of a specific type to a specific User ID. Covers MT5, Cashier and Unwelcome Login Locks.<br /><br /><b>Authentication:</b> not required",
        "operationId": "removeLockV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Lock removal V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveLockV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
     "/open-positions/countV2": {
      "get": {
        "summary": "Count of open positions (V2)",
        "description": "Count of open positions<br /><br /><b>Authentication:</b> not required",
        "operationId": "getOpenPositionsCountV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Client account id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/open-positionsV2": {
      "get": {
        "summary": "Get MT5 open positions (V2)",
        "description": "Get MT5 open positions<br /><br /><b>Authentication:</b> not required",
        "operationId": "getOpenPositionsV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Top level User ID.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/pending-ordersV2": {
      "get": {
        "summary": "Get pending orders (V2)",
        "description": "Get pending orders<br /><br /><b>Authentication:</b> not required",
        "operationId": "getPendingOrdersV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Top Level User ID.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
     "AddRemarksV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes the brand to direct the request to. Values include: V1 or V2" },
        "workflow_id": { "type": "string", "description": "An alpha-numeric ID to relate the remark to a specific instance of a workflow." },
        "user_id": { "type": "string", "description": "The top level User ID against which the remarks will be added." },
        "remarks_text": { "type": "string", "description": "The remarks text to be stored." },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
      "required": [
        "brand_code",
        "workflow_id",
        "user_id",
        "remarks_text",
        "created_by"
      ]
    },
     "DisableAccountV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes the brand to direct the request to. Values include: V1 or V2" },
        "user_id": { "type": "string", "description": "The top level User ID to identify all accounts to be disabled" },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
      "required": [
        "brand_code",
        "user_id",
        "created_by"
      ]
    },
     "EnableProofOfOwnershipV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes the brand to direct the request to. Values include: V1 or V2" },
        "user_id": { "type": "string", "description": "The top level User ID to against which Proof of Ownership is to be added." },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
      "required": [
        "brand_code",
        "user_id",
        "created_by"
      ]
    },
     "RemoveLockV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes the brand to direct the request to. Values include: V1 or V2" },
        "lock_code": { "type": "string" },
        "user_id": { "type": "string", "description": "The ID against which the lock will be added. For the MT5 lock, this is the MT5_LOGIN_ID. For the Cashier lock, this is the ACCOUNT_ID." },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
      "required": [
        "lock_code",
        "user_id",
        "created_by"
      ]
    },
    "AddLockV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes that the brand to direct the request to. Values include: V1 or V2" },
        "lock_code": { "type": "string", "description": "" },
        "user_id": { "type": "string", "description": "The top level User ID against which the lock will be added." },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
       "required": [
        "lock_code",
        "user_id",
        "created_by"
      ]
    },
    "AddLockResponse": {
      "type": "object",
      "properties": {
        "success_ind": { "type": "integer" }
      }
    },
     "NotifyClientV2Input": {
      "type": "object",
      "properties": {
        "brand_code": { "type": "string", "description": "Denotes the brand to direct the request to. Values include: V1 or V2" },
        "channel_code": { "type": "string", "description": "Denotes that the channel to notify the client via. Values include: EMAIL, INTERCOM" },
        "user_id": { "type": "string", "description": "The top level User ID against which the remarks will be added." },
        "notification_text": { "type": "string", "description": "The notifications text to be stored." },
        "created_by": { "type": "string", "description": "The internal user or system user for audit purposes." }
      },
      "required": [
        "brand_code",
        "channel_code",
        "user_id",
        "notification_text",
        "created_by"
      ]
    },
    "NotifyClientResponse": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" }
      }
    }
  }
}
