{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST APIs for Automation - V2 Endpoints",
    "description": "Swagger file containing only the V2 endpoints for Process Automation."
  },
  "host": "deriv-app.xano.io",
  "basePath": "/api:e71ULXBs",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/AddLockV2": {
      "post": {
        "summary": "Add Lock (V2)",
        "description": "The purpose of this API is to add a Lock of a specific type to a specific User ID. Covers MT5, Cashier and Unwelcome Login Locks.<br /><br /><b>Authentication:</b> not required",
        "operationId": "addLockV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add lock V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddLockV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful addition of lock",
            "schema": {
              "$ref": "#/definitions/AddLockResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/AddRemarksV2": {
      "post": {
        "summary": "Add Remarks (V2)",
        "description": "The purpose of this API is to add a new remark text for a specific user.<br /><br /><b>Authentication:</b> not required",
        "operationId": "addRemarksV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add remarks V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRemarksV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful addition of remarks",
            "schema": {
              "$ref": "#/definitions/AddRemarksResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CheckClientAgainst3rdPartyWatchlistV2": {
      "get": {
        "summary": "Check Client Against 3rd Party Watchlist (V2)",
        "description": "The purpose of this API is to check if the specific User ID exists against an external 3rd party provided watchlist.<br /><br /><b>Authentication:</b> not required",
        "operationId": "checkClientAgainst3rdPartyWatchlistV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes that the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to perform the Sanctions List check against.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watch_list",
            "in": "query",
            "description": "Watch list paremeter with which user will be screened",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "3rd party watchlist check result",
            "schema": {
              "$ref": "#/definitions/SanctionsCheckResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/CheckClientAgainstSanctionsListV2": {
      "get": {
        "summary": "Check Client Against Sanctions List (V2)",
        "description": "Returns whether the client is found in the sanctions list.",
        "operationId": "checkClientAgainstSanctionsListV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to perform the Sanctions List check against.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sanctions list check result",
            "schema": {
              "$ref": "#/definitions/SanctionsCheckResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/DisableAccountV2": {
      "post": {
        "summary": "Disable Account (V2)",
        "description": "The purpose of this API is to Disable all Accounts for a specific User ID, to prevent access.<br /><br /><b>Authentication:</b> not required",
        "operationId": "disableAccountV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Disable account V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAccountV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disable account result",
            "schema": {
              "$ref": "#/definitions/SimpleSuccessResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/EnableProofOfOwnershipV2": {
      "post": {
        "summary": "Enable Proof Of Ownership (V2)",
        "description": "Enables proof of ownership for the specified user ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "enableProofOfOwnershipV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Enable Proof Of Ownership V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableProofOfOwnershipV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enable Proof Of Ownership result",
            "schema": {
              "$ref": "#/definitions/SimpleSuccessResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GetAccountBalanceV2": {
      "get": {
        "summary": "Get Account Balance (V2)",
        "description": "The purpose of this API is to retrieve the balance across all accounts held for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getAccountBalanceV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify all accounts for which a consolidated balance is required.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account balance response",
            "schema": {
              "$ref": "#/definitions/AccountBalanceResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GetMT5AccountBalanceV2": {
      "get": {
        "summary": "Get MT5 Account Balance (V2)",
        "description": "The purpose of this API is to retrieve the balance across all MT5 accounts held for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getMT5AccountBalanceV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify all MT5 accounts for which a consolidated balance is required.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "MT5 account balance response",
            "schema": {
              "$ref": "#/definitions/MT5AccountBalanceResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GetPOIDataV2": {
      "get": {
        "summary": "Get POI Data (V2)",
        "description": "The purpose of this API is to retrieve the POI data for a specific User ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getPOIDataV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The top level User ID to identify who to get the POI data for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "created_by",
            "in": "query",
            "description": "The internal user or system user for audit purposes.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of POI verification results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/POIResult"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/GetSwagger2docsV2": {
      "get": {
        "summary": "Get Swagger 2 Docs (V2)",
        "description": "<br /><br /><b>Authentication:</b> not required",
        "operationId": "getSwagger2docsV2",
        "tags": [
          "V2"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success!",
            "schema": {}
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": {
            "description": "Rate Limited. Too many requests."
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/NotifyClientV2": {
      "post": {
        "summary": "Notify Client (V2)",
        "description": "The purpose of this API is to send Notifications to a specific client top level User ID, via a specific channel. ie Email, Intercom, etc<br /><br /><b>Authentication:</b> not required",
        "operationId": "notifyClientV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Notification V2 payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyClientV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification created",
            "schema": {
              "$ref": "#/definitions/NotifyClientResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/RemoveLockV2": {
      "post": {
        "summary": "Remove Lock (V2)",
        "description": "The purpose of this API is to remove a Lock of a specific type to a specific User ID. Covers MT5, Cashier and Unwelcome Login Locks.<br /><br /><b>Authentication:</b> not required",
        "operationId": "removeLockV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Lock removal V2 input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveLockV2Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lock removal result",
            "schema": {
              "$ref": "#/definitions/SimpleSuccessResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/open-positions/countV2": {
      "get": {
        "summary": "Count of open positions (V2)",
        "description": "Count of open positions<br /><br /><b>Authentication:</b> not required",
        "operationId": "getOpenPositionsCountV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Client account id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Open positions count",
            "schema": {
              "$ref": "#/definitions/CountResponse"
            }
          }
        }
      }
    },
    "/open-positionsV2": {
      "get": {
        "summary": "Get MT5 open positions (V2)",
        "description": "Get MT5 open positions<br /><br /><b>Authentication:</b> not required",
        "operationId": "getOpenPositionsV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Top level User ID.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Open positions response",
            "schema": {
              "$ref": "#/definitions/OpenPositionsResponse"
            }
          }
        }
      }
    },
    "/pending-ordersV2": {
      "get": {
        "summary": "Get pending orders (V2)",
        "description": "Get pending orders<br /><br /><b>Authentication:</b> not required",
        "operationId": "getPendingOrdersV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Top Level User ID.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pending orders response",
            "schema": {
              "$ref": "#/definitions/PendingOrdersResponse"
            }
          }
        }
      }
    },
    "/pending-orders/countV2": {
      "get": {
        "summary": "Get pending orders count (V2)",
        "description": "Returns the count of pending orders for a given account.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getPendingOrdersCountV2",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "brand_code",
            "in": "query",
            "description": "Denotes the brand to direct the request to. Values include: V1 or V2",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Client account id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pending orders count",
            "schema": {
              "$ref": "#/definitions/CountResponse"
            }
          }
        }
      }
    },
    "/workflow": {
      "get": {
        "summary": "Get Workflows",
        "description": "Returns a list of workflows.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflows",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Limit the number of returned records",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of workflow objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Workflow Status",
        "description": "Updates the status of a specific workflow.<br /><br /><b>Authentication:</b> not required",
        "operationId": "updateWorkflowStatus",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Workflow status update payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWorkflowStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow status updated successfully",
            "schema": {
              "$ref": "#/definitions/WorkflowUpdateResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-details": {
      "get": {
        "summary": "Get Workflow Details",
        "description": "Retrieves details for a specific workflow by its ID.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflowDetailsById",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The ID of the workflow to retrieve details for.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of workflow details",
            "schema": {
              "$ref": "#/definitions/WorkflowDetailsResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-client-screening": {
      "get": {
        "summary": "Get Workflow Client Screening Details",
        "description": "Retrieves client screening details associated with a specific workflow.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflowClientScreening",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The ID of the workflow to retrieve client screening details for.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Client screening details for workflow",
            "schema": {
              "$ref": "#/definitions/WorkflowClientScreeningResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-spm-check-poi-poo": {
      "get": {
        "summary": "Get Workflow SPM POI/POO Check Details",
        "description": "Retrieves Proof of Identity (POI) and Proof of Ownership (POO) check details for a specific workflow.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflowSpmCheckPoiPoo",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The ID of the workflow to retrieve POI/POO check details for.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "POI/POO check details for workflow",
            "schema": {
              "$ref": "#/definitions/WorkflowSpmCheckPoiPooResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-duplicate-account": {
      "get": {
        "summary": "Get Workflow Duplicate Account Details",
        "description": "Retrieves duplicate account information associated with a specific workflow.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflowDuplicateAccount",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The ID of the workflow to retrieve duplicate account details for.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Duplicate account details for workflow",
            "schema": {
              "$ref": "#/definitions/WorkflowDuplicateAccountResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-spm-validate-owner": {
      "get": {
        "summary": "Get Workflow SPM Validate Owner Details",
        "description": "Retrieves owner validation details for a specific workflow.<br /><br /><b>Authentication:</b> not required",
        "operationId": "getWorkflowSpmValidateOwner",
        "tags": [
          "V2"
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "description": "The ID of the workflow to retrieve owner validation details for.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Owner validation details for workflow",
            "schema": {
              "$ref": "#/definitions/WorkflowSpmValidateOwnerResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddRemarksV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes the brand to direct the request to. Values include: V1 or V2"
        },
        "workflow_id": {
          "type": "string",
          "description": "An alpha-numeric ID to relate the remark to a specific instance of a workflow."
        },
        "user_id": {
          "type": "string",
          "description": "The top level User ID against which the remarks will be added."
        },
        "remarks_text": {
          "type": "string",
          "description": "The remarks text to be stored."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "brand_code",
        "workflow_id",
        "user_id",
        "remarks_text",
        "created_by"
      ]
    },
    "DisableAccountV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes the brand to direct the request to. Values include: V1 or V2"
        },
        "user_id": {
          "type": "string",
          "description": "The top level User ID to identify all accounts to be disabled"
        },
        "remarks": {
          "type": "string",
          "description": "The reason for adding the lock."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "brand_code",
        "user_id",
        "created_by"
      ]
    },
    "EnableProofOfOwnershipV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes the brand to direct the request to. Values include: V1 or V2"
        },
        "user_id": {
          "type": "string",
          "description": "The top level User ID to against which Proof of Ownership is to be added."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "brand_code",
        "user_id",
        "created_by"
      ]
    },
    "RemoveLockV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes the brand to direct the request to. Values include: V1 or V2"
        },
        "lock_code": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "description": "The ID against which the lock will be added. For the MT5 lock, this is the MT5_LOGIN_ID. For the Cashier lock, this is the ACCOUNT_ID."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "lock_code",
        "user_id",
        "created_by"
      ]
    },
    "SimpleSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "integer"
        }
      }
    },
    "AddLockV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes that the brand to direct the request to. Values include: V1 or V2"
        },
        "lock_code": {
          "type": "string",
          "description": ""
        },
        "user_id": {
          "type": "string",
          "description": "The top level User ID against which the lock will be added."
        },
        "remarks": {
          "type": "string",
          "description": "The reason for adding the lock."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "lock_code",
        "user_id",
        "created_by"
      ]
    },
    "NotifyClientV2Input": {
      "type": "object",
      "properties": {
        "brand_code": {
          "type": "string",
          "description": "Denotes the brand to direct the request to. Values include: V1 or V2"
        },
        "channel_code": {
          "type": "string",
          "description": "Denotes that the channel to notify the client via. Values include: EMAIL, INTERCOM"
        },
        "user_id": {
          "type": "string",
          "description": "The top level User ID against which the remarks will be added."
        },
        "notification_text": {
          "type": "string",
          "description": "The notifications text to be stored."
        },
        "created_by": {
          "type": "string",
          "description": "The internal user or system user for audit purposes."
        }
      },
      "required": [
        "brand_code",
        "channel_code",
        "user_id",
        "notification_text",
        "created_by"
      ]
    },
    "NotifyClientResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "AddRemarksResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the newly created remark."
        }
      }
    },
    "SanctionsCheckResponse": {
      "type": "object",
      "properties": {
        "sanction_exists": {
          "type": "integer",
          "description": "Indicates if a sanction exists (0: No, 1: Yes)",
          "example": 1
        }
      }
    },
    "AddLockResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "integer"
        }
      }
    },
    "AccountBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number"
        }
      }
    },
    "MT5AccountBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "example": 44.44
        }
      }
    },
    "POIResult": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "OpenPosition": {
      "type": "object",
      "properties": {
        "position_id": {
          "type": "integer"
        },
        "login": {
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "time_create": {
          "type": "string"
        },
        "contract_size": {
          "type": "string"
        },
        "profit": {
          "type": "string"
        },
        "price_open": {
          "type": "string"
        },
        "price_current": {
          "type": "string"
        }
      }
    },
    "PendingOrder": {
      "type": "object",
      "properties": {
        "order": {
          "type": "integer"
        },
        "login": {
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "contract_size": {
          "type": "string"
        },
        "price_order": {
          "type": "string"
        },
        "price_current": {
          "type": "string"
        },
        "time_setup": {
          "type": "string"
        }
      }
    },
    "OpenPositionsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenPosition"
          }
        }
      }
    },
    "PendingOrdersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PendingOrder"
          }
        }
      }
    },
    "CountResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 42
        }
      }
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "event_type": {
          "type":  "string"
        }
      }
    },
    "WorkflowDetailsResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": 1234
        },
        "account_id": {
          "type": "string",
          "x-nullable": true,
          "example": null
        },
        "broker": {
          "type": "string",
          "x-nullable": true,
          "example": "CR"
        },
        "user_id_sharer": {
          "type": "string",
          "x-nullable": true,
          "example": null
        }
      }
    },
    "UpdateWorkflowStatusRequest": {
      "type": "object",
      "required": [
        "workflow_id",
        "status"
      ],
      "properties": {
        "workflow_id": {
          "type": "integer",
          "example": 28
        },
        "status": {
          "type": "string",
          "example": "started"
        }
      }
    },
    "WorkflowUpdateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the workflow that was updated.",
          "example": 28
        }
      }
    },
    "WorkflowClientScreeningResponse": {
      "type": "object",
      "properties": {
        "broker": {
          "type": "string",
          "description": "Broker associated with the client."
        },
        "user_id": {
          "type": "string",
          "description": "The primary user ID."
        },
        "account_id": {
          "type": "string",
          "description": "The account ID."
        },
        "related_account_identfier": {
          "type": "string",
          "description": "An identifier for a related account (e.g., user_id_sharer)."
        }
      }
    },
    "WorkflowSpmCheckPoiPooResponse": {
      "type": "object",
      "properties": {
        "user_id_owner": {
          "type": "string",
          "description": "The user ID of the owner."
        },
        "user_id_sharer": {
          "type": "string",
          "description": "The user ID of the account sharer, if applicable."
        }
      }
    },
    "WorkflowDuplicateAccountResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The user ID associated with the duplicate account check."
        }
      }
    },
    "WorkflowSpmValidateOwnerResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The user ID validated as owner."
        }
      }
    }
  }
}
